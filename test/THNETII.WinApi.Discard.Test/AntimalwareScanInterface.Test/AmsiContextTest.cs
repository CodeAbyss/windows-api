using System;
using System.Reflection;
using Xunit;

namespace THNETII.WinApi.AntimalwareScanInterface.Test
{
    public class AmsiContextTest
    {
        private static readonly string appName = Assembly.GetExecutingAssembly().GetName().Name;
        private readonly AmsiContext ctx = new AmsiContext(appName);

        public void Dispose()
        {
            GC.SuppressFinalize(this);
            ctx.Dispose();
        }

        ~AmsiContextTest() => Dispose();

        [Fact]
        public static void CreateAndDispose()
        {
            var appName = Assembly.GetExecutingAssembly().GetName().Name;
            try
            {
                using (var ctx = new AmsiContext(appName)) { }
            }
            catch (Exception e) when (e is DllNotFoundException dllExcept)
            {
                throw;
            }
        }

        [Fact]
        public static void CreateAndDisposeWithNullAppNameThrows()
        {
            Assert.Throws<ArgumentException>(() => new AmsiContext(appName: null));
        }

        [Fact]
        public void ScanNullBufferThrows()
        {
            Assert.Throws<ArgumentException>(() => ctx.ScanBuffer(null));
        }

        [Fact]
        public void ScanNullStringThrows()
        {
            Assert.Throws<ArgumentException>(() => ctx.ScanString(null));
        }
    }
}
