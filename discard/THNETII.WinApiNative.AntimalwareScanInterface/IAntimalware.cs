using System;
using System.Runtime.InteropServices;

namespace THNETII.WinApiNative.AntimalwareScanInterface
{
    using static AMSI_RESULT;

    /// <summary>
    /// Represents the antimalware product.
    /// </summary>
    /// <remarks>
    /// <para>Original MSDN documentation page: <a href="https://docs.microsoft.com/en-us/windows/desktop/api/amsi/nn-amsi-iantimalware">IAntimalware interface</a></para>
    /// </remarks>
    [ComImport, Guid("82d29c2e-f062-44e6-b5c9-3d9a2f24a2df")]
    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
    public interface IAntimalware
    {
        #region IAntimalware::Scan method
        /// <summary>
        /// Scan a stream of content.
        /// </summary>
        /// <param name="stream">The <see cref="IAmsiStream"/> stream to be scanned.</param>
        /// <param name="result">The result of the scan. See <see cref="AMSI_RESULT"/>.</param>
        /// <param name="provider">The <see cref="IAntimalwareProvider"/> provider of the antimalware product.</param>
        /// <returns>
        /// This method can return one of these values.
        /// <list type="table">
        /// <listheader><term>Return code</term><description>Description</description></listheader>
        /// <item><term><see cref="S_OK"/></term><description>Success. </description></item>
        /// <item><term><see cref="E_INVALIDARG"/></term><description>One or more argument is invalid. </description></item>
        /// <item><term><see cref="E_NOT_VALID_STATE"/></term><description>The object is not initialized. </description></item>
        /// </list>
        /// </returns>
        /// <remarks>
        /// <para>Original MSDN documentation page: <a href="https://docs.microsoft.com/en-us/windows/desktop/api/amsi/nf-amsi-iantimalware-scan">IAntimalware::Scan method</a></para>
        /// </remarks>
        /// <seealso cref="AMSI_RESULT"/>
        /// <seealso cref="IAmsiStream"/>
        /// <seealso cref="IAntimalware"/>
        /// <seealso cref="IAntimalwareProvider"/>
        [return: MarshalAs(UnmanagedType.Error)]
        int Scan(
            [MarshalAs(UnmanagedType.Interface)] IAmsiStream stream,
            out AMSI_RESULT result,
            out IAntimalwareProvider provider
            );
        #endregion
        #region IAntimalware::CloseSession method
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
        [PreserveSig]
        void CloseSession(ulong session);
#pragma warning restore CS1591 // Missing XML comment for publicly visible type or member
        #endregion
    }
}
