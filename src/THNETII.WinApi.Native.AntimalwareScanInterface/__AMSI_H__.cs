namespace THNETII.WinApi.Native.AntimalwareScanInterface
{
    using System;
    using static AMSI_RESULT;
    using static NativeMethods;

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
    public static class __AMSI_H__
    {
        #region L96-L97
        /// <summary>
        /// Determines if the result of a scan indicates that the content should be blocked.
        /// </summary>
        /// <param name="r">The <see cref="AMSI_RESULT"/> returned by <see cref="AmsiScanBuffer"/> or <see cref="AmsiScanString"/>.</param>
        /// <returns><c>true</c> if <paramref name="r"/> indicates that malware was detected; otherwise, <c>false</c>.</returns>
        /// <remarks>
        /// <para>Original MSDN documentation page: <a href="https://docs.microsoft.com/nb-no/windows/desktop/api/amsi/nf-amsi-amsiresultismalware">AmsiResultIsMalware macro</a></para>
        /// </remarks>
        /// <seealso cref="AMSI_RESULT"/>
        /// <seealso cref="AmsiScanBuffer"/>
        /// <seealso cref="AmsiScanString"/>
        public static bool AmsiResultIsMalware(this AMSI_RESULT r) =>
            r >= AMSI_RESULT_DETECTED;
        public static bool AmsiResultIsBlockedByAdmin(this AMSI_RESULT r) =>
            r >= AMSI_RESULT_BLOCKED_BY_ADMIN_START && r <= AMSI_RESULT_BLOCKED_BY_ADMIN_END;
        #endregion
        #region L620-L622
        public const string CLSIDSTRING_Antimalware = "fdb00e52-a214-4aa1-8fba-4357bb0072ec";
        public static Guid CLSID_Antimalware = new Guid(CLSIDSTRING_Antimalware);
        #endregion
    }
#pragma warning restore CS1591 // Missing XML comment for publicly visible type or member
}
